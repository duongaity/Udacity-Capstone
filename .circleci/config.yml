version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3.0

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build 
  
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Frontend Lint Test
          command: |
            cd frontend
            npm install
            npm run lint
      - run:
          name: Frontend Unit test
          command: |
            cd frontend
            npm install
            npm run test

  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Scan frontend dependencies
          command: |
            cd frontend
            npm audit --audit-level=critical --force
  
  upload-docker:
    docker:
      - image: cimg/node:16.13.2
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build Docker Image
          command: |
            docker build --tag=$DOCKER_IMAGE_NAME .
      - run:
          name: Push Docker Image to DockerHub
          command: |
            echo "Docker DOCKER_USERNAME: $DOCKER_USERNAME"
            echo "Docker DOCKER_IMAGE: $DOCKER_IMAGE_NAME"
            docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
            docker tag $DOCKER_IMAGE_NAME $DOCKER_USERNAME/$DOCKER_IMAGE_NAME
            docker push $DOCKER_USERNAME/$DOCKER_IMAGE_NAME

  deploy-application:
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - aws-eks/create-cluster:
          cluster-name: udacity-cluster-${CIRCLE_WORKFLOW_ID:0:7}
          aws-region: ${AWS_DEFAULT_REGION}
      - aws-eks/update-kubeconfig-with-authenticator:
          aws-region: ${AWS_DEFAULT_REGION}
          cluster-name: udacity-cluster-${CIRCLE_WORKFLOW_ID:0:7}
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployments/deployment.yaml
          resource-name: nginxwebapp
          show-kubectl-command: true
      - run:
          name: Deploy kubectl
          command: |
            kubectl get pods
            kubectl get services

workflows:
  default:
    jobs:
      - build-frontend
      - test-frontend:
          requires: [build-frontend]
      - scan-frontend:
          requires: [build-frontend]
      - upload-docker:
          requires: [scan-frontend, test-frontend]
          filters:
            branches:
              only: [master]
      - deploy-application:
          requires: [upload-docker]
          filters:
            branches:
              only: [master]


